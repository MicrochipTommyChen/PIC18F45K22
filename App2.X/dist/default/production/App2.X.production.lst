

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Apr 21 11:32:47 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           ; Version 2.10
    34                           ; Generated 31/07/2019 GMT
    35                           ; 
    36                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F45K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  0009BE                     __pidataCOMRAM:
    70                           	opt callstack 0
    71                           
    72                           ;initializer for _flashAddr2
    73  0009BE  7FFF               	dw	32767
    74  0009C0  0000               	dw	0
    75                           
    76                           ;initializer for _flashAddr
    77  0009C2  7FFE               	dw	32766
    78  0009C4  0000               	dw	0
    79                           
    80                           ;initializer for _writeData2
    81  0009C6  55                 	db	85
    82                           
    83                           ;initializer for _writeData
    84  0009C7  AA                 	db	170
    85                           
    86                           	psect	nvCOMRAM
    87  000038                     __pnvCOMRAM:
    88                           	opt callstack 0
    89  000038                     _timer0ReloadVal:
    90                           	opt callstack 0
    91  000038                     	ds	2
    92  00003A                     _TMR0_InterruptHandler:
    93                           	opt callstack 0
    94  00003A                     	ds	2
    95  0000                     _ANSELA	set	3896
    96  0000                     _ANSELE	set	3900
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELC	set	3898
    99  0000                     _ANSELD	set	3899
   100  0000                     _PORTCbits	set	3970
   101  0000                     _PIR2bits	set	4001
   102  0000                     _EEDATA	set	4008
   103  0000                     _EEADR	set	4009
   104  0000                     _EECON2	set	4007
   105  0000                     _EECON1bits	set	4006
   106  0000                     _TABLAT	set	4085
   107  0000                     _TBLPTRL	set	4086
   108  0000                     _TBLPTRH	set	4087
   109  0000                     _TBLPTRU	set	4088
   110  0000                     _INTCON2bits	set	4081
   111  0000                     _WPUB	set	3937
   112  0000                     _TRISD	set	3989
   113  0000                     _TRISC	set	3988
   114  0000                     _TRISB	set	3987
   115  0000                     _TRISA	set	3986
   116  0000                     _TRISE	set	3990
   117  0000                     _LATC	set	3979
   118  0000                     _LATB	set	3978
   119  0000                     _LATA	set	3977
   120  0000                     _LATD	set	3980
   121  0000                     _LATE	set	3981
   122  0000                     _OSCTUNE	set	3995
   123  0000                     _OSCCON2	set	4050
   124  0000                     _OSCCON	set	4051
   125  0000                     _RCONbits	set	4048
   126  0000                     _LATAbits	set	3977
   127  0000                     _T0CON	set	4053
   128  0000                     _INTCONbits	set	4082
   129  0000                     _TMR0L	set	4054
   130  0000                     _TMR0H	set	4055
   131  0000                     _T0CONbits	set	4053
   132                           
   133                           ; #config settings
   134  0000                     
   135                           	psect	cinit
   136  000874                     __pcinit:
   137                           	opt callstack 0
   138  000874                     start_initialization:
   139                           	opt callstack 0
   140  000874                     __initialization:
   141                           	opt callstack 0
   142                           
   143                           ; Initialize objects allocated to COMRAM (10 bytes)
   144                           ; load TBLPTR registers with __pidataCOMRAM
   145  000874  0EBE               	movlw	low __pidataCOMRAM
   146  000876  6EF6               	movwf	tblptrl,c
   147  000878  0E09               	movlw	high __pidataCOMRAM
   148  00087A  6EF7               	movwf	tblptrh,c
   149  00087C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   150  00087E  6EF8               	movwf	tblptru,c
   151  000880  EE00  F02E         	lfsr	0,__pdataCOMRAM
   152  000884  EE10 F00A          	lfsr	1,10
   153  000888                     copy_data0:
   154  000888  0009               	tblrd		*+
   155  00088A  CFF5 FFEE          	movff	tablat,postinc0
   156  00088E  50E5               	movf	postdec1,w,c
   157  000890  50E1               	movf	fsr1l,w,c
   158  000892  E1FA               	bnz	copy_data0
   159                           
   160                           ; Clear objects allocated to BANK0 (64 bytes)
   161  000894  EE00  F060         	lfsr	0,__pbssBANK0
   162  000898  0E40               	movlw	64
   163  00089A                     clear_0:
   164  00089A  6AEE               	clrf	postinc0,c
   165  00089C  06E8               	decf	wreg,f,c
   166  00089E  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to COMRAM (1 bytes)
   169  0008A0  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   170  0008A2                     end_of_initialization:
   171                           	opt callstack 0
   172  0008A2                     __end_of__initialization:
   173                           	opt callstack 0
   174  0008A2  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   175  0008A4  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   176  0008A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  0008A8  6EF8               	movwf	tblptru,c
   178  0008AA  0100               	movlb	0
   179  0008AC  EF58  F004         	goto	_main	;jump to C main() function
   180                           
   181                           	psect	bssCOMRAM
   182  00003C                     __pbssCOMRAM:
   183                           	opt callstack 0
   184  00003C                     TMR0_DefaultInterruptHandler@cnt:
   185                           	opt callstack 0
   186  00003C                     	ds	1
   187                           
   188                           	psect	dataCOMRAM
   189  00002E                     __pdataCOMRAM:
   190                           	opt callstack 0
   191  00002E                     _flashAddr2:
   192                           	opt callstack 0
   193  00002E                     	ds	4
   194  000032                     _flashAddr:
   195                           	opt callstack 0
   196  000032                     	ds	4
   197  000036                     _writeData2:
   198                           	opt callstack 0
   199  000036                     	ds	1
   200  000037                     _writeData:
   201                           	opt callstack 0
   202  000037                     	ds	1
   203                           
   204                           	psect	bssBANK0
   205  000060                     __pbssBANK0:
   206                           	opt callstack 0
   207  000060                     _Buf:
   208                           	opt callstack 0
   209  000060                     	ds	64
   210                           
   211                           	psect	cstackCOMRAM
   212  000001                     __pcstackCOMRAM:
   213                           	opt callstack 0
   214  000001                     ??_TMR0_DefaultInterruptHandler:
   215  000001                     
   216                           ; 1 bytes @ 0x0
   217  000001                     	ds	1
   218  000002                     ??_INTERRUPT_InterruptManager:
   219                           
   220                           ; 1 bytes @ 0x1
   221  000002                     	ds	2
   222  000004                     TMR0_SetInterruptHandler@InterruptHandler:
   223                           	opt callstack 0
   224  000004                     FLASH_ReadByte@flashAddr:
   225                           	opt callstack 0
   226  000004                     FLASH_EraseBlock@baseAddr:
   227                           	opt callstack 0
   228                           
   229                           ; 4 bytes @ 0x3
   230  000004                     	ds	2
   231  000006                     ??_TMR0_Initialize:
   232                           
   233                           ; 1 bytes @ 0x5
   234  000006                     	ds	2
   235  000008                     FLASH_EraseBlock@GIEBitValue:
   236                           	opt callstack 0
   237                           
   238                           ; 1 bytes @ 0x7
   239  000008                     	ds	1
   240  000009                     FLASH_WriteBlock@writeAddr:
   241                           	opt callstack 0
   242                           
   243                           ; 4 bytes @ 0x8
   244  000009                     	ds	4
   245  00000D                     FLASH_WriteBlock@flashWrBufPtr:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0xC
   249  00000D                     	ds	2
   250  00000F                     ??_FLASH_WriteBlock:
   251                           
   252                           ; 1 bytes @ 0xE
   253  00000F                     	ds	4
   254  000013                     FLASH_WriteBlock@blockStartAddr:
   255                           	opt callstack 0
   256                           
   257                           ; 4 bytes @ 0x12
   258  000013                     	ds	4
   259  000017                     FLASH_WriteBlock@GIEBitValue:
   260                           	opt callstack 0
   261                           
   262                           ; 1 bytes @ 0x16
   263  000017                     	ds	1
   264  000018                     FLASH_WriteBlock@numberOfWriteBlocks:
   265                           	opt callstack 0
   266                           
   267                           ; 1 bytes @ 0x17
   268  000018                     	ds	1
   269  000019                     FLASH_WriteBlock@j:
   270                           	opt callstack 0
   271                           
   272                           ; 1 bytes @ 0x18
   273  000019                     	ds	1
   274  00001A                     FLASH_WriteBlock@WriteBlkOffset:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0x19
   278  00001A                     	ds	2
   279  00001C                     FLASH_WriteBlock@i:
   280                           	opt callstack 0
   281                           
   282                           ; 1 bytes @ 0x1B
   283  00001C                     	ds	1
   284  00001D                     FLASH_WriteByte@flashAddr:
   285                           	opt callstack 0
   286                           
   287                           ; 4 bytes @ 0x1C
   288  00001D                     	ds	4
   289  000021                     FLASH_WriteByte@flashRdBufPtr:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x20
   293  000021                     	ds	2
   294  000023                     FLASH_WriteByte@byte:
   295                           	opt callstack 0
   296                           
   297                           ; 1 bytes @ 0x22
   298  000023                     	ds	1
   299  000024                     ??_FLASH_WriteByte:
   300                           
   301                           ; 1 bytes @ 0x23
   302  000024                     	ds	4
   303  000028                     FLASH_WriteByte@offset:
   304                           	opt callstack 0
   305                           
   306                           ; 1 bytes @ 0x27
   307  000028                     	ds	1
   308  000029                     FLASH_WriteByte@blockStartAddr:
   309                           	opt callstack 0
   310                           
   311                           ; 4 bytes @ 0x28
   312  000029                     	ds	4
   313  00002D                     FLASH_WriteByte@i:
   314                           	opt callstack 0
   315                           
   316                           ; 1 bytes @ 0x2C
   317  00002D                     	ds	1
   318  00002E                     
   319                           ; 1 bytes @ 0x2D
   320 ;;
   321 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   322 ;;
   323 ;; *************** function _main *****************
   324 ;; Defined at:
   325 ;;		line 61 in file "main.c"
   326 ;; Parameters:    Size  Location     Type
   327 ;;		None
   328 ;; Auto vars:     Size  Location     Type
   329 ;;		None
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   339 ;;      Params:         0       0       0       0       0       0       0
   340 ;;      Locals:         0       0       0       0       0       0       0
   341 ;;      Temps:          0       0       0       0       0       0       0
   342 ;;      Totals:         0       0       0       0       0       0       0
   343 ;;Total ram usage:        0 bytes
   344 ;; Hardware stack levels required when called:    7
   345 ;; This function calls:
   346 ;;		_EraseResetVector
   347 ;;		_SYSTEM_Initialize
   348 ;;		_Signal_BL_Requested
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355  0008B0                     __ptext0:
   356                           	opt callstack 0
   357  0008B0                     _main:
   358                           	opt callstack 24
   359  0008B0                     
   360                           ;main.c: 64:     SYSTEM_Initialize();
   361  0008B0  ECC6  F004         	call	_SYSTEM_Initialize	;wreg free
   362  0008B4                     
   363                           ;main.c: 74:     (INTCONbits.GIE = 1);
   364  0008B4  8EF2               	bsf	242,7,c	;volatile
   365  0008B6                     
   366                           ;main.c: 80:     (INTCONbits.PEIE = 1);
   367  0008B6  8CF2               	bsf	242,6,c	;volatile
   368  0008B8                     l1292:
   369                           
   370                           ;main.c: 90:         {;main.c: 92:             if (PORTCbits.RC5 == 0)
   371  0008B8  BA82               	btfsc	130,5,c	;volatile
   372  0008BA  EF61  F004         	goto	u301
   373  0008BE  EF63  F004         	goto	u300
   374  0008C2                     u301:
   375  0008C2  EF5C  F004         	goto	l1292
   376  0008C6                     u300:
   377  0008C6                     
   378                           ;main.c: 93:             {;main.c: 94:                 (INTCONbits.GIE = 0);
   379  0008C6  9EF2               	bcf	242,7,c	;volatile
   380                           
   381                           ;main.c: 95:                 (INTCONbits.PEIE = 0);
   382  0008C8  9CF2               	bcf	242,6,c	;volatile
   383  0008CA                     
   384                           ;main.c: 96:                 Signal_BL_Requested ();
   385  0008CA  ECD9  F003         	call	_Signal_BL_Requested	;wreg free
   386                           
   387                           ;main.c: 97:                 EraseResetVector ();
   388  0008CE  ECFA  F003         	call	_EraseResetVector	;wreg free
   389  0008D2                     l227:
   390  0008D2  AA82               	btfss	130,5,c	;volatile
   391  0008D4  EF6E  F004         	goto	u311
   392  0008D8  EF70  F004         	goto	u310
   393  0008DC                     u311:
   394  0008DC  EF69  F004         	goto	l227
   395  0008E0                     u310:
   396  0008E0  00FF               	reset		;# 
   397  0008E2  EF5C  F004         	goto	l1292
   398  0008E6  EF9F  F002         	goto	start
   399  0008EA                     __end_of_main:
   400                           	opt callstack 0
   401                           
   402 ;; *************** function _Signal_BL_Requested *****************
   403 ;; Defined at:
   404 ;;		line 105 in file "main.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   418 ;;      Params:         0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0
   420 ;;      Temps:          0       0       0       0       0       0       0
   421 ;;      Totals:         0       0       0       0       0       0       0
   422 ;;Total ram usage:        0 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    6
   425 ;; This function calls:
   426 ;;		_FLASH_WriteByte
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text1
   433  0007B2                     __ptext1:
   434                           	opt callstack 0
   435  0007B2                     _Signal_BL_Requested:
   436                           	opt callstack 24
   437  0007B2                     
   438                           ;main.c: 107:     FLASH_WriteByte(0x8000 - 1, Buf, 0x00);
   439  0007B2  0EFF               	movlw	255
   440  0007B4  6E1D               	movwf	FLASH_WriteByte@flashAddr^0,c
   441  0007B6  0E7F               	movlw	127
   442  0007B8  6E1E               	movwf	(FLASH_WriteByte@flashAddr+1)^0,c
   443  0007BA  0E00               	movlw	0
   444  0007BC  6E1F               	movwf	(FLASH_WriteByte@flashAddr+2)^0,c
   445  0007BE  0E00               	movlw	0
   446  0007C0  6E20               	movwf	(FLASH_WriteByte@flashAddr+3)^0,c
   447  0007C2  0E60               	movlw	low _Buf
   448  0007C4  6E21               	movwf	FLASH_WriteByte@flashRdBufPtr^0,c
   449  0007C6  0E00               	movlw	high _Buf
   450  0007C8  6E22               	movwf	(FLASH_WriteByte@flashRdBufPtr+1)^0,c
   451  0007CA  0E00               	movlw	0
   452  0007CC  6E23               	movwf	FLASH_WriteByte@byte^0,c
   453  0007CE  EC5A  F003         	call	_FLASH_WriteByte	;wreg free
   454                           
   455                           ;main.c: 108:     FLASH_WriteByte(0x8000 - 2, Buf, 0x00);
   456  0007D2  0EFE               	movlw	254
   457  0007D4  6E1D               	movwf	FLASH_WriteByte@flashAddr^0,c
   458  0007D6  0E7F               	movlw	127
   459  0007D8  6E1E               	movwf	(FLASH_WriteByte@flashAddr+1)^0,c
   460  0007DA  0E00               	movlw	0
   461  0007DC  6E1F               	movwf	(FLASH_WriteByte@flashAddr+2)^0,c
   462  0007DE  0E00               	movlw	0
   463  0007E0  6E20               	movwf	(FLASH_WriteByte@flashAddr+3)^0,c
   464  0007E2  0E60               	movlw	low _Buf
   465  0007E4  6E21               	movwf	FLASH_WriteByte@flashRdBufPtr^0,c
   466  0007E6  0E00               	movlw	high _Buf
   467  0007E8  6E22               	movwf	(FLASH_WriteByte@flashRdBufPtr+1)^0,c
   468  0007EA  0E00               	movlw	0
   469  0007EC  6E23               	movwf	FLASH_WriteByte@byte^0,c
   470  0007EE  EC5A  F003         	call	_FLASH_WriteByte	;wreg free
   471  0007F2  0012               	return		;funcret
   472  0007F4                     __end_of_Signal_BL_Requested:
   473                           	opt callstack 0
   474                           
   475 ;; *************** function _SYSTEM_Initialize *****************
   476 ;; Defined at:
   477 ;;		line 50 in file "mcc_generated_files/mcc.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   491 ;;      Params:         0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    5
   498 ;; This function calls:
   499 ;;		_INTERRUPT_Initialize
   500 ;;		_OSCILLATOR_Initialize
   501 ;;		_PIN_MANAGER_Initialize
   502 ;;		_TMR0_Initialize
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509  00098C                     __ptext2:
   510                           	opt callstack 0
   511  00098C                     _SYSTEM_Initialize:
   512                           	opt callstack 25
   513  00098C                     
   514                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
   515  00098C  ECE9  F004         	call	_INTERRUPT_Initialize	;wreg free
   516  000990                     
   517                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
   518  000990  EC1B  F004         	call	_PIN_MANAGER_Initialize	;wreg free
   519  000994                     
   520                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
   521  000994  ECD8  F004         	call	_OSCILLATOR_Initialize	;wreg free
   522  000998                     
   523                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
   524  000998  EC91  F004         	call	_TMR0_Initialize	;wreg free
   525  00099C  0012               	return		;funcret
   526  00099E                     __end_of_SYSTEM_Initialize:
   527                           	opt callstack 0
   528                           
   529 ;; *************** function _TMR0_Initialize *****************
   530 ;; Defined at:
   531 ;;		line 68 in file "mcc_generated_files/tmr0.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   545 ;;      Params:         0       0       0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    4
   552 ;; This function calls:
   553 ;;		_TMR0_SetInterruptHandler
   554 ;; This function is called by:
   555 ;;		_SYSTEM_Initialize
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text3
   560  000922                     __ptext3:
   561                           	opt callstack 0
   562  000922                     _TMR0_Initialize:
   563                           	opt callstack 25
   564  000922                     
   565                           ;mcc_generated_files/tmr0.c: 73:     T0CONbits.T08BIT = 0;
   566  000922  9CD5               	bcf	213,6,c	;volatile
   567  000924                     
   568                           ;mcc_generated_files/tmr0.c: 76:     TMR0H = 0xF3;
   569  000924  0EF3               	movlw	243
   570  000926  6ED7               	movwf	215,c	;volatile
   571                           
   572                           ;mcc_generated_files/tmr0.c: 79:     TMR0L = 0xCA;
   573  000928  0ECA               	movlw	202
   574  00092A  6ED6               	movwf	214,c	;volatile
   575  00092C                     
   576                           ;mcc_generated_files/tmr0.c: 83:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   577  00092C  50D6               	movf	214,w,c	;volatile
   578  00092E  CFD7 F006          	movff	4055,??_TMR0_Initialize	;volatile
   579  000932  6A07               	clrf	(??_TMR0_Initialize+1)^0,c
   580  000934  C006  F007         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   581  000938  6A06               	clrf	??_TMR0_Initialize^0,c
   582  00093A  1006               	iorwf	??_TMR0_Initialize^0,w,c
   583  00093C  6E38               	movwf	_timer0ReloadVal^0,c	;volatile
   584  00093E  5007               	movf	(??_TMR0_Initialize+1)^0,w,c
   585  000940  6E39               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
   586  000942                     
   587                           ;mcc_generated_files/tmr0.c: 86:     INTCONbits.TMR0IF = 0;
   588  000942  94F2               	bcf	242,2,c	;volatile
   589  000944                     
   590                           ;mcc_generated_files/tmr0.c: 89:     INTCONbits.TMR0IE = 1;
   591  000944  8AF2               	bsf	242,5,c	;volatile
   592  000946                     
   593                           ;mcc_generated_files/tmr0.c: 92:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
   594  000946  0E4C               	movlw	low _TMR0_DefaultInterruptHandler
   595  000948  6E04               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   596  00094A  0E07               	movlw	high _TMR0_DefaultInterruptHandler
   597  00094C  6E05               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   598  00094E  ECE4  F004         	call	_TMR0_SetInterruptHandler	;wreg free
   599  000952                     
   600                           ;mcc_generated_files/tmr0.c: 95:     T0CON = 0x92;
   601  000952  0E92               	movlw	146
   602  000954  6ED5               	movwf	213,c	;volatile
   603  000956  0012               	return		;funcret
   604  000958                     __end_of_TMR0_Initialize:
   605                           	opt callstack 0
   606                           
   607 ;; *************** function _TMR0_SetInterruptHandler *****************
   608 ;; Defined at:
   609 ;;		line 157 in file "mcc_generated_files/tmr0.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
   612 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   624 ;;      Params:         2       0       0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0
   627 ;;      Totals:         2       0       0       0       0       0       0
   628 ;;Total ram usage:        2 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    3
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_TMR0_Initialize
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text4
   639  0009C8                     __ptext4:
   640                           	opt callstack 0
   641  0009C8                     _TMR0_SetInterruptHandler:
   642                           	opt callstack 25
   643  0009C8                     
   644                           ;mcc_generated_files/tmr0.c: 158:     TMR0_InterruptHandler = InterruptHandler;
   645  0009C8  C004  F03A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   646  0009CC  C005  F03B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   647  0009D0  0012               	return		;funcret
   648  0009D2                     __end_of_TMR0_SetInterruptHandler:
   649                           	opt callstack 0
   650                           
   651 ;; *************** function _PIN_MANAGER_Initialize *****************
   652 ;; Defined at:
   653 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    3
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_SYSTEM_Initialize
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text5
   682  000836                     __ptext5:
   683                           	opt callstack 0
   684  000836                     _PIN_MANAGER_Initialize:
   685                           	opt callstack 26
   686  000836                     
   687                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   688  000836  0E00               	movlw	0
   689  000838  6E8D               	movwf	141,c	;volatile
   690                           
   691                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   692  00083A  0E00               	movlw	0
   693  00083C  6E8C               	movwf	140,c	;volatile
   694                           
   695                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x20;
   696  00083E  0E20               	movlw	32
   697  000840  6E89               	movwf	137,c	;volatile
   698                           
   699                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   700  000842  0E00               	movlw	0
   701  000844  6E8A               	movwf	138,c	;volatile
   702                           
   703                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   704  000846  0E00               	movlw	0
   705  000848  6E8B               	movwf	139,c	;volatile
   706                           
   707                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   708  00084A  0E07               	movlw	7
   709  00084C  6E96               	movwf	150,c	;volatile
   710                           
   711                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xCF;
   712  00084E  0ECF               	movlw	207
   713  000850  6E92               	movwf	146,c	;volatile
   714  000852                     
   715                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   716  000852  6893               	setf	147,c	;volatile
   717  000854                     
   718                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
   719  000854  6894               	setf	148,c	;volatile
   720  000856                     
   721                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   722  000856  6895               	setf	149,c	;volatile
   723  000858                     
   724                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
   725  000858  010F               	movlb	15	; () banked
   726  00085A  693B               	setf	59,b	;volatile
   727                           
   728                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xDC;
   729  00085C  0EDC               	movlw	220
   730  00085E  6F3A               	movwf	58,b	;volatile
   731                           
   732                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0x3F;
   733  000860  0E3F               	movlw	63
   734  000862  6F39               	movwf	57,b	;volatile
   735                           
   736                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
   737  000864  0E07               	movlw	7
   738  000866  6F3C               	movwf	60,b	;volatile
   739                           
   740                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
   741  000868  0E0F               	movlw	15
   742  00086A  6F38               	movwf	56,b	;volatile
   743                           
   744                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
   745  00086C  0E00               	movlw	0
   746  00086E  6E61               	movwf	97,c	;volatile
   747  000870                     
   748                           ; BSR set to: 15
   749                           ;mcc_generated_files/pin_manager.c: 88:     INTCON2bits.nRBPU = 1;
   750  000870  8EF1               	bsf	241,7,c	;volatile
   751  000872                     
   752                           ; BSR set to: 15
   753  000872  0012               	return		;funcret
   754  000874                     __end_of_PIN_MANAGER_Initialize:
   755                           	opt callstack 0
   756                           
   757 ;; *************** function _OSCILLATOR_Initialize *****************
   758 ;; Defined at:
   759 ;;		line 59 in file "mcc_generated_files/mcc.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, status,2
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   773 ;;      Params:         0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    3
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_SYSTEM_Initialize
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text6
   788  0009B0                     __ptext6:
   789                           	opt callstack 0
   790  0009B0                     _OSCILLATOR_Initialize:
   791                           	opt callstack 26
   792  0009B0                     
   793                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
   794  0009B0  0E30               	movlw	48
   795  0009B2  6ED3               	movwf	211,c	;volatile
   796                           
   797                           ;mcc_generated_files/mcc.c: 64:     OSCCON2 = 0x04;
   798  0009B4  0E04               	movlw	4
   799  0009B6  6ED2               	movwf	210,c	;volatile
   800                           
   801                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
   802  0009B8  0E00               	movlw	0
   803  0009BA  6E9B               	movwf	155,c	;volatile
   804  0009BC  0012               	return		;funcret
   805  0009BE                     __end_of_OSCILLATOR_Initialize:
   806                           	opt callstack 0
   807                           
   808 ;; *************** function _INTERRUPT_Initialize *****************
   809 ;; Defined at:
   810 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		None
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         0       0       0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         0       0       0       0       0       0       0
   828 ;;Total ram usage:        0 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    3
   831 ;; This function calls:
   832 ;;		Nothing
   833 ;; This function is called by:
   834 ;;		_SYSTEM_Initialize
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text7
   839  0009D2                     __ptext7:
   840                           	opt callstack 0
   841  0009D2                     _INTERRUPT_Initialize:
   842                           	opt callstack 26
   843  0009D2                     
   844                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
   845  0009D2  9ED0               	bcf	208,7,c	;volatile
   846  0009D4  0012               	return		;funcret
   847  0009D6                     __end_of_INTERRUPT_Initialize:
   848                           	opt callstack 0
   849                           
   850 ;; *************** function _EraseResetVector *****************
   851 ;; Defined at:
   852 ;;		line 111 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   866 ;;      Params:         0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0
   868 ;;      Temps:          0       0       0       0       0       0       0
   869 ;;      Totals:         0       0       0       0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    6
   873 ;; This function calls:
   874 ;;		_FLASH_WriteByte
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text8
   881  0007F4                     __ptext8:
   882                           	opt callstack 0
   883  0007F4                     _EraseResetVector:
   884                           	opt callstack 24
   885  0007F4                     
   886                           ;main.c: 113:     FLASH_WriteByte(0x0500, Buf, 0x00);
   887  0007F4  0E00               	movlw	0
   888  0007F6  6E1D               	movwf	FLASH_WriteByte@flashAddr^0,c
   889  0007F8  0E05               	movlw	5
   890  0007FA  6E1E               	movwf	(FLASH_WriteByte@flashAddr+1)^0,c
   891  0007FC  0E00               	movlw	0
   892  0007FE  6E1F               	movwf	(FLASH_WriteByte@flashAddr+2)^0,c
   893  000800  0E00               	movlw	0
   894  000802  6E20               	movwf	(FLASH_WriteByte@flashAddr+3)^0,c
   895  000804  0E60               	movlw	low _Buf
   896  000806  6E21               	movwf	FLASH_WriteByte@flashRdBufPtr^0,c
   897  000808  0E00               	movlw	high _Buf
   898  00080A  6E22               	movwf	(FLASH_WriteByte@flashRdBufPtr+1)^0,c
   899  00080C  0E00               	movlw	0
   900  00080E  6E23               	movwf	FLASH_WriteByte@byte^0,c
   901  000810  EC5A  F003         	call	_FLASH_WriteByte	;wreg free
   902                           
   903                           ;main.c: 114:     FLASH_WriteByte(0x0500 + 1, Buf, 0x00);
   904  000814  0E01               	movlw	1
   905  000816  6E1D               	movwf	FLASH_WriteByte@flashAddr^0,c
   906  000818  0E05               	movlw	5
   907  00081A  6E1E               	movwf	(FLASH_WriteByte@flashAddr+1)^0,c
   908  00081C  0E00               	movlw	0
   909  00081E  6E1F               	movwf	(FLASH_WriteByte@flashAddr+2)^0,c
   910  000820  0E00               	movlw	0
   911  000822  6E20               	movwf	(FLASH_WriteByte@flashAddr+3)^0,c
   912  000824  0E60               	movlw	low _Buf
   913  000826  6E21               	movwf	FLASH_WriteByte@flashRdBufPtr^0,c
   914  000828  0E00               	movlw	high _Buf
   915  00082A  6E22               	movwf	(FLASH_WriteByte@flashRdBufPtr+1)^0,c
   916  00082C  0E00               	movlw	0
   917  00082E  6E23               	movwf	FLASH_WriteByte@byte^0,c
   918  000830  EC5A  F003         	call	_FLASH_WriteByte	;wreg free
   919  000834  0012               	return		;funcret
   920  000836                     __end_of_EraseResetVector:
   921                           	opt callstack 0
   922                           
   923 ;; *************** function _FLASH_WriteByte *****************
   924 ;; Defined at:
   925 ;;		line 75 in file "mcc_generated_files/memory.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  flashAddr       4   28[COMRAM] unsigned long 
   928 ;;  flashRdBufPt    2   32[COMRAM] PTR unsigned char 
   929 ;;		 -> Buf(64), 
   930 ;;  byte            1   34[COMRAM] unsigned char 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  blockStartAd    4   40[COMRAM] unsigned long 
   933 ;;  i               1   44[COMRAM] unsigned char 
   934 ;;  offset          1   39[COMRAM] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   944 ;;      Params:         7       0       0       0       0       0       0
   945 ;;      Locals:         6       0       0       0       0       0       0
   946 ;;      Temps:          4       0       0       0       0       0       0
   947 ;;      Totals:        17       0       0       0       0       0       0
   948 ;;Total ram usage:       17 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    5
   951 ;; This function calls:
   952 ;;		_FLASH_ReadByte
   953 ;;		_FLASH_WriteBlock
   954 ;; This function is called by:
   955 ;;		_Signal_BL_Requested
   956 ;;		_EraseResetVector
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text9
   961  0006B4                     __ptext9:
   962                           	opt callstack 0
   963  0006B4                     _FLASH_WriteByte:
   964                           	opt callstack 24
   965  0006B4                     
   966                           ;mcc_generated_files/memory.c: 75: void FLASH_WriteByte(uint32_t flashAddr, uint8_t *fla
      +                          shRdBufPtr, uint8_t byte);mcc_generated_files/memory.c: 76: {;mcc_generated_files/memory
      +                          .c: 77:     uint32_t blockStartAddr = (uint32_t)(flashAddr & ((0x8000 -1) ^ (64 -1)));
   967  0006B4  0EC0               	movlw	192
   968  0006B6  6E24               	movwf	??_FLASH_WriteByte^0,c
   969  0006B8  0E7F               	movlw	127
   970  0006BA  6E25               	movwf	(??_FLASH_WriteByte+1)^0,c
   971  0006BC  C01D  F026         	movff	FLASH_WriteByte@flashAddr,??_FLASH_WriteByte+2
   972  0006C0  C01E  F027         	movff	FLASH_WriteByte@flashAddr+1,??_FLASH_WriteByte+3
   973  0006C4  5024               	movf	??_FLASH_WriteByte^0,w,c
   974  0006C6  1626               	andwf	(??_FLASH_WriteByte+2)^0,f,c
   975  0006C8  5025               	movf	(??_FLASH_WriteByte+1)^0,w,c
   976  0006CA  1627               	andwf	(??_FLASH_WriteByte+3)^0,f,c
   977  0006CC  C026  F029         	movff	??_FLASH_WriteByte+2,FLASH_WriteByte@blockStartAddr
   978  0006D0  C027  F02A         	movff	??_FLASH_WriteByte+3,FLASH_WriteByte@blockStartAddr+1
   979  0006D4  6A2B               	clrf	(FLASH_WriteByte@blockStartAddr+2)^0,c
   980  0006D6  6A2C               	clrf	(FLASH_WriteByte@blockStartAddr+3)^0,c
   981                           
   982                           ;mcc_generated_files/memory.c: 78:     uint8_t offset = (uint8_t)(flashAddr & (64 -1));
   983  0006D8  501D               	movf	FLASH_WriteByte@flashAddr^0,w,c
   984  0006DA  0B3F               	andlw	63
   985  0006DC  6E28               	movwf	FLASH_WriteByte@offset^0,c
   986  0006DE                     
   987                           ;mcc_generated_files/memory.c: 79:     uint8_t i;;mcc_generated_files/memory.c: 82:     
      +                          for (i=0; i<64; i++)
   988  0006DE  0E00               	movlw	0
   989  0006E0  6E2D               	movwf	FLASH_WriteByte@i^0,c
   990  0006E2                     l1258:
   991                           
   992                           ;mcc_generated_files/memory.c: 83:     {;mcc_generated_files/memory.c: 84:         flash
      +                          RdBufPtr[i] = FLASH_ReadByte((blockStartAddr+i));
   993  0006E2  502D               	movf	FLASH_WriteByte@i^0,w,c
   994  0006E4  2421               	addwf	FLASH_WriteByte@flashRdBufPtr^0,w,c
   995  0006E6  6ED9               	movwf	fsr2l,c
   996  0006E8  0E00               	movlw	0
   997  0006EA  2022               	addwfc	(FLASH_WriteByte@flashRdBufPtr+1)^0,w,c
   998  0006EC  6EDA               	movwf	fsr2h,c
   999  0006EE  502D               	movf	FLASH_WriteByte@i^0,w,c
  1000  0006F0  2429               	addwf	FLASH_WriteByte@blockStartAddr^0,w,c
  1001  0006F2  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  1002  0006F4  0E00               	movlw	0
  1003  0006F6  202A               	addwfc	(FLASH_WriteByte@blockStartAddr+1)^0,w,c
  1004  0006F8  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  1005  0006FA  0E00               	movlw	0
  1006  0006FC  202B               	addwfc	(FLASH_WriteByte@blockStartAddr+2)^0,w,c
  1007  0006FE  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  1008  000700  0E00               	movlw	0
  1009  000702  202C               	addwfc	(FLASH_WriteByte@blockStartAddr+3)^0,w,c
  1010  000704  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  1011  000706  ECCF  F004         	call	_FLASH_ReadByte	;wreg free
  1012  00070A  6EDF               	movwf	indf2,c
  1013  00070C                     
  1014                           ;mcc_generated_files/memory.c: 85:     }
  1015  00070C  2A2D               	incf	FLASH_WriteByte@i^0,f,c
  1016  00070E  0E3F               	movlw	63
  1017  000710  642D               	cpfsgt	FLASH_WriteByte@i^0,c
  1018  000712  EF8D  F003         	goto	u291
  1019  000716  EF8F  F003         	goto	u290
  1020  00071A                     u291:
  1021  00071A  EF71  F003         	goto	l1258
  1022  00071E                     u290:
  1023  00071E                     
  1024                           ;mcc_generated_files/memory.c: 88:     flashRdBufPtr[offset] = byte;
  1025  00071E  5028               	movf	FLASH_WriteByte@offset^0,w,c
  1026  000720  2421               	addwf	FLASH_WriteByte@flashRdBufPtr^0,w,c
  1027  000722  6ED9               	movwf	fsr2l,c
  1028  000724  0E00               	movlw	0
  1029  000726  2022               	addwfc	(FLASH_WriteByte@flashRdBufPtr+1)^0,w,c
  1030  000728  6EDA               	movwf	fsr2h,c
  1031  00072A  C023  FFDF         	movff	FLASH_WriteByte@byte,indf2
  1032  00072E                     
  1033                           ;mcc_generated_files/memory.c: 91:     FLASH_WriteBlock(blockStartAddr, flashRdBufPtr);
  1034  00072E  C029  F009         	movff	FLASH_WriteByte@blockStartAddr,FLASH_WriteBlock@writeAddr
  1035  000732  C02A  F00A         	movff	FLASH_WriteByte@blockStartAddr+1,FLASH_WriteBlock@writeAddr+1
  1036  000736  C02B  F00B         	movff	FLASH_WriteByte@blockStartAddr+2,FLASH_WriteBlock@writeAddr+2
  1037  00073A  C02C  F00C         	movff	FLASH_WriteByte@blockStartAddr+3,FLASH_WriteBlock@writeAddr+3
  1038  00073E  C021  F00D         	movff	FLASH_WriteByte@flashRdBufPtr,FLASH_WriteBlock@flashWrBufPtr
  1039  000742  C022  F00E         	movff	FLASH_WriteByte@flashRdBufPtr+1,FLASH_WriteBlock@flashWrBufPtr+1
  1040  000746  ECA1  F002         	call	_FLASH_WriteBlock	;wreg free
  1041  00074A  0012               	return		;funcret
  1042  00074C                     __end_of_FLASH_WriteByte:
  1043                           	opt callstack 0
  1044                           
  1045 ;; *************** function _FLASH_WriteBlock *****************
  1046 ;; Defined at:
  1047 ;;		line 94 in file "mcc_generated_files/memory.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  writeAddr       4    8[COMRAM] unsigned long 
  1050 ;;  flashWrBufPt    2   12[COMRAM] PTR unsigned char 
  1051 ;;		 -> Buf(64), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  blockStartAd    4   18[COMRAM] unsigned long 
  1054 ;;  WriteBlkOffs    2   25[COMRAM] unsigned short 
  1055 ;;  i               1   27[COMRAM] unsigned char 
  1056 ;;  j               1   24[COMRAM] unsigned char 
  1057 ;;  numberOfWrit    1   23[COMRAM] unsigned char 
  1058 ;;  GIEBitValue     1   22[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      char 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1068 ;;      Params:         6       0       0       0       0       0       0
  1069 ;;      Locals:        10       0       0       0       0       0       0
  1070 ;;      Temps:          4       0       0       0       0       0       0
  1071 ;;      Totals:        20       0       0       0       0       0       0
  1072 ;;Total ram usage:       20 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    4
  1075 ;; This function calls:
  1076 ;;		_FLASH_EraseBlock
  1077 ;; This function is called by:
  1078 ;;		_FLASH_WriteByte
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text10
  1083  000542                     __ptext10:
  1084                           	opt callstack 0
  1085  000542                     _FLASH_WriteBlock:
  1086                           	opt callstack 24
  1087  000542                     
  1088                           ;mcc_generated_files/memory.c: 94: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 95: {;mcc_generated_files/memory.c: 96:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((0x8000 -1) ^ (64 -1)));
  1089  000542  0EC0               	movlw	192
  1090  000544  6E0F               	movwf	??_FLASH_WriteBlock^0,c
  1091  000546  0E7F               	movlw	127
  1092  000548  6E10               	movwf	(??_FLASH_WriteBlock+1)^0,c
  1093  00054A  C009  F011         	movff	FLASH_WriteBlock@writeAddr,??_FLASH_WriteBlock+2
  1094  00054E  C00A  F012         	movff	FLASH_WriteBlock@writeAddr+1,??_FLASH_WriteBlock+3
  1095  000552  500F               	movf	??_FLASH_WriteBlock^0,w,c
  1096  000554  1611               	andwf	(??_FLASH_WriteBlock+2)^0,f,c
  1097  000556  5010               	movf	(??_FLASH_WriteBlock+1)^0,w,c
  1098  000558  1612               	andwf	(??_FLASH_WriteBlock+3)^0,f,c
  1099  00055A  C011  F013         	movff	??_FLASH_WriteBlock+2,FLASH_WriteBlock@blockStartAddr
  1100  00055E  C012  F014         	movff	??_FLASH_WriteBlock+3,FLASH_WriteBlock@blockStartAddr+1
  1101  000562  6A15               	clrf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  1102  000564  6A16               	clrf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  1103  000566                     
  1104                           ;mcc_generated_files/memory.c: 97:     uint8_t GIEBitValue = INTCONbits.GIE;
  1105  000566  0E00               	movlw	0
  1106  000568  BEF2               	btfsc	242,7,c	;volatile
  1107  00056A  0E01               	movlw	1
  1108  00056C  6E17               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  1109  00056E                     
  1110                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  1111  00056E  5013               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  1112  000570  1809               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  1113  000572  E10F               	bnz	u220
  1114  000574  5014               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  1115  000576  180A               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  1116  000578  E10C               	bnz	u220
  1117  00057A  5015               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  1118  00057C  180B               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  1119  00057E  E109               	bnz	u220
  1120  000580  5016               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  1121  000582  180C               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  1122  000584  B4D8               	btfsc	status,2,c
  1123  000586  EFC7  F002         	goto	u221
  1124  00058A  EFC9  F002         	goto	u220
  1125  00058E                     u221:
  1126  00058E  EFCB  F002         	goto	l1200
  1127  000592                     u220:
  1128  000592  EF59  F003         	goto	l175
  1129  000596                     l1200:
  1130                           
  1131                           ;mcc_generated_files/memory.c: 108:     numberOfWriteBlocks = 64/64;
  1132  000596  0E01               	movlw	1
  1133  000598  6E18               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  1134  00059A                     
  1135                           ;mcc_generated_files/memory.c: 111:     FLASH_EraseBlock(writeAddr);
  1136  00059A  C009  F004         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  1137  00059E  C00A  F005         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  1138  0005A2  C00B  F006         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  1139  0005A6  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  1140  0005AA  ECAC  F004         	call	_FLASH_EraseBlock	;wreg free
  1141  0005AE                     
  1142                           ;mcc_generated_files/memory.c: 113:     for(j=0; j<numberOfWriteBlocks; j++)
  1143  0005AE  0E00               	movlw	0
  1144  0005B0  6E19               	movwf	FLASH_WriteBlock@j^0,c
  1145  0005B2  EF50  F003         	goto	l1234
  1146  0005B6                     l1206:
  1147                           
  1148                           ;mcc_generated_files/memory.c: 114:     {;mcc_generated_files/memory.c: 116:         Wri
      +                          teBlkOffset = (uint16_t)j * 64;
  1149  0005B6  5019               	movf	FLASH_WriteBlock@j^0,w,c
  1150  0005B8  6E0F               	movwf	??_FLASH_WriteBlock^0,c
  1151  0005BA  6A10               	clrf	(??_FLASH_WriteBlock+1)^0,c
  1152  0005BC  0E06               	movlw	6
  1153  0005BE                     u235:
  1154  0005BE  90D8               	bcf	status,0,c
  1155  0005C0  360F               	rlcf	??_FLASH_WriteBlock^0,f,c
  1156  0005C2  3610               	rlcf	(??_FLASH_WriteBlock+1)^0,f,c
  1157  0005C4  2EE8               	decfsz	wreg,f,c
  1158  0005C6  EFDF  F002         	goto	u235
  1159  0005CA  C00F  F01A         	movff	??_FLASH_WriteBlock,FLASH_WriteBlock@WriteBlkOffset
  1160  0005CE  C010  F01B         	movff	??_FLASH_WriteBlock+1,FLASH_WriteBlock@WriteBlkOffset+1
  1161                           
  1162                           ;mcc_generated_files/memory.c: 119:         TBLPTRU = (uint8_t)(((writeAddr + WriteBlkOf
      +                          fset) & 0x00FF0000) >> 16);
  1163  0005D2  501A               	movf	FLASH_WriteBlock@WriteBlkOffset^0,w,c
  1164  0005D4  2409               	addwf	FLASH_WriteBlock@writeAddr^0,w,c
  1165  0005D6  6E0F               	movwf	??_FLASH_WriteBlock^0,c
  1166  0005D8  501B               	movf	(FLASH_WriteBlock@WriteBlkOffset+1)^0,w,c
  1167  0005DA  200A               	addwfc	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  1168  0005DC  6E10               	movwf	(??_FLASH_WriteBlock+1)^0,c
  1169  0005DE  0E00               	movlw	0
  1170  0005E0  200B               	addwfc	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  1171  0005E2  6E11               	movwf	(??_FLASH_WriteBlock+2)^0,c
  1172  0005E4  0E00               	movlw	0
  1173  0005E6  200C               	addwfc	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  1174  0005E8  6E12               	movwf	(??_FLASH_WriteBlock+3)^0,c
  1175  0005EA  0E11               	movlw	17
  1176  0005EC  EFFD  F002         	goto	u240
  1177  0005F0                     u245:
  1178  0005F0  90D8               	bcf	status,0,c
  1179  0005F2  3212               	rrcf	(??_FLASH_WriteBlock+3)^0,f,c
  1180  0005F4  3211               	rrcf	(??_FLASH_WriteBlock+2)^0,f,c
  1181  0005F6  3210               	rrcf	(??_FLASH_WriteBlock+1)^0,f,c
  1182  0005F8  320F               	rrcf	??_FLASH_WriteBlock^0,f,c
  1183  0005FA                     u240:
  1184  0005FA  2EE8               	decfsz	wreg,f,c
  1185  0005FC  EFF8  F002         	goto	u245
  1186  000600  500F               	movf	??_FLASH_WriteBlock^0,w,c
  1187  000602  6EF8               	movwf	248,c	;volatile
  1188                           
  1189                           ;mcc_generated_files/memory.c: 120:         TBLPTRH = (uint8_t)(((writeAddr + WriteBlkOf
      +                          fset) & 0x0000FF00) >> 8);
  1190  000604  501A               	movf	FLASH_WriteBlock@WriteBlkOffset^0,w,c
  1191  000606  2409               	addwf	FLASH_WriteBlock@writeAddr^0,w,c
  1192  000608  6E0F               	movwf	??_FLASH_WriteBlock^0,c
  1193  00060A  501B               	movf	(FLASH_WriteBlock@WriteBlkOffset+1)^0,w,c
  1194  00060C  200A               	addwfc	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  1195  00060E  6E10               	movwf	(??_FLASH_WriteBlock+1)^0,c
  1196  000610  0E00               	movlw	0
  1197  000612  200B               	addwfc	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  1198  000614  6E11               	movwf	(??_FLASH_WriteBlock+2)^0,c
  1199  000616  0E00               	movlw	0
  1200  000618  200C               	addwfc	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  1201  00061A  6E12               	movwf	(??_FLASH_WriteBlock+3)^0,c
  1202  00061C  C010  F00F         	movff	??_FLASH_WriteBlock+1,??_FLASH_WriteBlock
  1203  000620  C011  F010         	movff	??_FLASH_WriteBlock+2,??_FLASH_WriteBlock+1
  1204  000624  C012  F011         	movff	??_FLASH_WriteBlock+3,??_FLASH_WriteBlock+2
  1205  000628  6A12               	clrf	(??_FLASH_WriteBlock+3)^0,c
  1206  00062A  500F               	movf	??_FLASH_WriteBlock^0,w,c
  1207  00062C  6EF7               	movwf	247,c	;volatile
  1208                           
  1209                           ;mcc_generated_files/memory.c: 121:         TBLPTRL = (uint8_t)((writeAddr + WriteBlkOff
      +                          set) & 0x000000FF);
  1210  00062E  501A               	movf	FLASH_WriteBlock@WriteBlkOffset^0,w,c
  1211  000630  2409               	addwf	FLASH_WriteBlock@writeAddr^0,w,c
  1212  000632  6EF6               	movwf	246,c	;volatile
  1213  000634                     
  1214                           ;mcc_generated_files/memory.c: 124:         for (i=0; i<64; i++)
  1215  000634  0E00               	movlw	0
  1216  000636  6E1C               	movwf	FLASH_WriteBlock@i^0,c
  1217  000638                     l1214:
  1218                           
  1219                           ;mcc_generated_files/memory.c: 125:         {;mcc_generated_files/memory.c: 126:        
      +                               TABLAT = flashWrBufPtr[WriteBlkOffset+i];
  1220  000638  501C               	movf	FLASH_WriteBlock@i^0,w,c
  1221  00063A  240D               	addwf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  1222  00063C  6E0F               	movwf	??_FLASH_WriteBlock^0,c
  1223  00063E  0E00               	movlw	0
  1224  000640  200E               	addwfc	(FLASH_WriteBlock@flashWrBufPtr+1)^0,w,c
  1225  000642  6E10               	movwf	(??_FLASH_WriteBlock+1)^0,c
  1226  000644  501A               	movf	FLASH_WriteBlock@WriteBlkOffset^0,w,c
  1227  000646  240F               	addwf	??_FLASH_WriteBlock^0,w,c
  1228  000648  6ED9               	movwf	fsr2l,c
  1229  00064A  501B               	movf	(FLASH_WriteBlock@WriteBlkOffset+1)^0,w,c
  1230  00064C  2010               	addwfc	(??_FLASH_WriteBlock+1)^0,w,c
  1231  00064E  6EDA               	movwf	fsr2h,c
  1232  000650  50DF               	movf	indf2,w,c
  1233  000652  6EF5               	movwf	245,c	;volatile
  1234  000654                     
  1235                           ;mcc_generated_files/memory.c: 128:             if (i == (64 -1))
  1236  000654  0E3F               	movlw	63
  1237  000656  181C               	xorwf	FLASH_WriteBlock@i^0,w,c
  1238  000658  A4D8               	btfss	status,2,c
  1239  00065A  EF31  F003         	goto	u251
  1240  00065E  EF33  F003         	goto	u250
  1241  000662                     u251:
  1242  000662  EF36  F003         	goto	l180
  1243  000666                     u250:
  1244  000666  000C               	tblwt		*	;# 
  1245                           
  1246                           ;mcc_generated_files/memory.c: 131:             }
  1247  000668  EF37  F003         	goto	l1220
  1248  00066C                     l180:
  1249  00066C  000D               	tblwt		*+	;# 
  1250  00066E                     l1220:
  1251                           
  1252                           ;mcc_generated_files/memory.c: 136:         }
  1253  00066E  2A1C               	incf	FLASH_WriteBlock@i^0,f,c
  1254  000670  0E3F               	movlw	63
  1255  000672  641C               	cpfsgt	FLASH_WriteBlock@i^0,c
  1256  000674  EF3E  F003         	goto	u261
  1257  000678  EF40  F003         	goto	u260
  1258  00067C                     u261:
  1259  00067C  EF1C  F003         	goto	l1214
  1260  000680                     u260:
  1261  000680                     
  1262                           ;mcc_generated_files/memory.c: 138:         EECON1bits.EEPGD = 1;
  1263  000680  8EA6               	bsf	166,7,c	;volsfr
  1264                           
  1265                           ;mcc_generated_files/memory.c: 139:         EECON1bits.CFGS = 0;
  1266  000682  9CA6               	bcf	166,6,c	;volsfr
  1267                           
  1268                           ;mcc_generated_files/memory.c: 140:         EECON1bits.WREN = 1;
  1269  000684  84A6               	bsf	166,2,c	;volsfr
  1270                           
  1271                           ;mcc_generated_files/memory.c: 141:         INTCONbits.GIE = 0;
  1272  000686  9EF2               	bcf	242,7,c	;volatile
  1273  000688                     
  1274                           ;mcc_generated_files/memory.c: 142:         EECON2 = 0x55;
  1275  000688  0E55               	movlw	85
  1276  00068A  6EA7               	movwf	167,c	;volsfr
  1277                           
  1278                           ;mcc_generated_files/memory.c: 143:         EECON2 = 0xAA;
  1279  00068C  0EAA               	movlw	170
  1280  00068E  6EA7               	movwf	167,c	;volsfr
  1281  000690                     
  1282                           ;mcc_generated_files/memory.c: 144:         EECON1bits.WR = 1;
  1283  000690  82A6               	bsf	166,1,c	;volsfr
  1284  000692                     
  1285                           ;mcc_generated_files/memory.c: 146:         EECON1bits.WREN = 0;
  1286  000692  94A6               	bcf	166,2,c	;volsfr
  1287  000694                     
  1288                           ;mcc_generated_files/memory.c: 147:         INTCONbits.GIE = GIEBitValue;
  1289  000694  B017               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  1290  000696  D002               	bra	u275
  1291  000698  9EF2               	bcf	242,7,c	;volatile
  1292  00069A  D001               	bra	u276
  1293  00069C                     u275:
  1294  00069C  8EF2               	bsf	242,7,c	;volatile
  1295  00069E                     u276:
  1296  00069E                     
  1297                           ;mcc_generated_files/memory.c: 148:     }
  1298  00069E  2A19               	incf	FLASH_WriteBlock@j^0,f,c
  1299  0006A0                     l1234:
  1300  0006A0  5018               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  1301  0006A2  5C19               	subwf	FLASH_WriteBlock@j^0,w,c
  1302  0006A4  A0D8               	btfss	status,0,c
  1303  0006A6  EF57  F003         	goto	u281
  1304  0006AA  EF59  F003         	goto	u280
  1305  0006AE                     u281:
  1306  0006AE  EFDB  F002         	goto	l1206
  1307  0006B2                     u280:
  1308  0006B2                     l175:
  1309  0006B2  0012               	return		;funcret
  1310  0006B4                     __end_of_FLASH_WriteBlock:
  1311                           	opt callstack 0
  1312                           
  1313 ;; *************** function _FLASH_EraseBlock *****************
  1314 ;; Defined at:
  1315 ;;		line 153 in file "mcc_generated_files/memory.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  baseAddr        4    3[COMRAM] unsigned long 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1329 ;;      Params:         4       0       0       0       0       0       0
  1330 ;;      Locals:         1       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0
  1332 ;;      Totals:         5       0       0       0       0       0       0
  1333 ;;Total ram usage:        5 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    3
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_FLASH_WriteBlock
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text11
  1344  000958                     __ptext11:
  1345                           	opt callstack 0
  1346  000958                     _FLASH_EraseBlock:
  1347                           	opt callstack 24
  1348  000958                     
  1349                           ;mcc_generated_files/memory.c: 153: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 154: {;mcc_generated_files/memory.c: 155:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  1350  000958  0E00               	movlw	0
  1351  00095A  BEF2               	btfsc	242,7,c	;volatile
  1352  00095C  0E01               	movlw	1
  1353  00095E  6E08               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  1354  000960                     
  1355                           ;mcc_generated_files/memory.c: 157:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  1356  000960  C006  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  1357  000964                     
  1358                           ;mcc_generated_files/memory.c: 158:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  1359  000964  C005  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  1360  000968                     
  1361                           ;mcc_generated_files/memory.c: 159:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  1362  000968  C004  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  1363  00096C                     
  1364                           ;mcc_generated_files/memory.c: 161:     EECON1bits.EEPGD = 1;
  1365  00096C  8EA6               	bsf	166,7,c	;volsfr
  1366  00096E                     
  1367                           ;mcc_generated_files/memory.c: 162:     EECON1bits.CFGS = 0;
  1368  00096E  9CA6               	bcf	166,6,c	;volsfr
  1369  000970                     
  1370                           ;mcc_generated_files/memory.c: 163:     EECON1bits.WREN = 1;
  1371  000970  84A6               	bsf	166,2,c	;volsfr
  1372  000972                     
  1373                           ;mcc_generated_files/memory.c: 164:     EECON1bits.FREE = 1;
  1374  000972  88A6               	bsf	166,4,c	;volsfr
  1375  000974                     
  1376                           ;mcc_generated_files/memory.c: 165:     INTCONbits.GIE = 0;
  1377  000974  9EF2               	bcf	242,7,c	;volatile
  1378  000976                     
  1379                           ;mcc_generated_files/memory.c: 166:     EECON2 = 0x55;
  1380  000976  0E55               	movlw	85
  1381  000978  6EA7               	movwf	167,c	;volsfr
  1382  00097A                     
  1383                           ;mcc_generated_files/memory.c: 167:     EECON2 = 0xAA;
  1384  00097A  0EAA               	movlw	170
  1385  00097C  6EA7               	movwf	167,c	;volsfr
  1386  00097E                     
  1387                           ;mcc_generated_files/memory.c: 168:     EECON1bits.WR = 1;
  1388  00097E  82A6               	bsf	166,1,c	;volsfr
  1389  000980                     
  1390                           ;mcc_generated_files/memory.c: 169:     INTCONbits.GIE = GIEBitValue;
  1391  000980  B008               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  1392  000982  D002               	bra	u215
  1393  000984  9EF2               	bcf	242,7,c	;volatile
  1394  000986  D001               	bra	u216
  1395  000988                     u215:
  1396  000988  8EF2               	bsf	242,7,c	;volatile
  1397  00098A                     u216:
  1398  00098A  0012               	return		;funcret
  1399  00098C                     __end_of_FLASH_EraseBlock:
  1400                           	opt callstack 0
  1401                           
  1402 ;; *************** function _FLASH_ReadByte *****************
  1403 ;; Defined at:
  1404 ;;		line 59 in file "mcc_generated_files/memory.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  flashAddr       4    3[COMRAM] unsigned long 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1418 ;;      Params:         4       0       0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0
  1421 ;;      Totals:         4       0       0       0       0       0       0
  1422 ;;Total ram usage:        4 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    3
  1425 ;; This function calls:
  1426 ;;		Nothing
  1427 ;; This function is called by:
  1428 ;;		_FLASH_WriteByte
  1429 ;;		_FLASH_ReadWord
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text12
  1434  00099E                     __ptext12:
  1435                           	opt callstack 0
  1436  00099E                     _FLASH_ReadByte:
  1437                           	opt callstack 25
  1438  00099E                     
  1439                           ;mcc_generated_files/memory.c: 59: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 60: {;mcc_generated_files/memory.c: 61:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  1440  00099E  C006  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  1441                           
  1442                           ;mcc_generated_files/memory.c: 62:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  1443  0009A2  C005  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  1444                           
  1445                           ;mcc_generated_files/memory.c: 63:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  1446  0009A6  C004  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  1447  0009AA  0008               	tblrd		*	;# 
  1448  0009AC                     
  1449                           ;mcc_generated_files/memory.c: 67:     return (TABLAT);
  1450  0009AC  50F5               	movf	245,w,c	;volatile
  1451  0009AE  0012               	return		;funcret
  1452  0009B0                     __end_of_FLASH_ReadByte:
  1453                           	opt callstack 0
  1454                           
  1455 ;; *************** function _INTERRUPT_InterruptManager *****************
  1456 ;; Defined at:
  1457 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1471 ;;      Params:         0       0       0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0       0       0
  1473 ;;      Temps:          2       0       0       0       0       0       0
  1474 ;;      Totals:         2       0       0       0       0       0       0
  1475 ;;Total ram usage:        2 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		_TMR0_ISR
  1480 ;; This function is called by:
  1481 ;;		Interrupt level 2
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	intcode
  1486  000508                     __pintcode:
  1487                           	opt callstack 0
  1488  000508                     _INTERRUPT_InterruptManager:
  1489                           	opt callstack 24
  1490                           
  1491                           ;incstack = 0
  1492  000508  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1493  00050A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  1494  00050E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1495  000512                     
  1496                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  1497  000512  AAF2               	btfss	242,5,c	;volatile
  1498  000514  EF8E  F002         	goto	i2u15_41
  1499  000518  EF90  F002         	goto	i2u15_40
  1500  00051C                     i2u15_41:
  1501  00051C  EF99  F002         	goto	i2l72
  1502  000520                     i2u15_40:
  1503  000520  A4F2               	btfss	242,2,c	;volatile
  1504  000522  EF95  F002         	goto	i2u16_41
  1505  000526  EF97  F002         	goto	i2u16_40
  1506  00052A                     i2u16_41:
  1507  00052A  EF99  F002         	goto	i2l72
  1508  00052E                     i2u16_40:
  1509  00052E                     
  1510                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  1511  00052E  EC75  F004         	call	_TMR0_ISR	;wreg free
  1512  000532                     i2l72:
  1513  000532  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1514  000536  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1515  00053A  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1516  00053C  0011               	retfie		f
  1517  00053E                     __end_of_INTERRUPT_InterruptManager:
  1518                           	opt callstack 0
  1519                           
  1520 ;; *************** function _TMR0_ISR *****************
  1521 ;; Defined at:
  1522 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1536 ;;      Params:         0       0       0       0       0       0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    1
  1543 ;; This function calls:
  1544 ;;		Absolute function
  1545 ;;		_TMR0_DefaultInterruptHandler
  1546 ;; This function is called by:
  1547 ;;		_INTERRUPT_InterruptManager
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text14
  1552  0008EA                     __ptext14:
  1553                           	opt callstack 0
  1554  0008EA                     _TMR0_ISR:
  1555                           	opt callstack 24
  1556  0008EA                     
  1557                           ;mcc_generated_files/tmr0.c: 141:     INTCONbits.TMR0IF = 0;
  1558  0008EA  94F2               	bcf	242,2,c	;volatile
  1559  0008EC                     
  1560                           ;mcc_generated_files/tmr0.c: 145:     TMR0H = timer0ReloadVal >> 8;
  1561  0008EC  5039               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  1562  0008EE  6ED7               	movwf	215,c	;volatile
  1563  0008F0                     
  1564                           ;mcc_generated_files/tmr0.c: 146:     TMR0L = (uint8_t) timer0ReloadVal;
  1565  0008F0  C038  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  1566  0008F4                     
  1567                           ;mcc_generated_files/tmr0.c: 148:     if(TMR0_InterruptHandler)
  1568  0008F4  503A               	movf	_TMR0_InterruptHandler^0,w,c
  1569  0008F6  103B               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  1570  0008F8  B4D8               	btfsc	status,2,c
  1571  0008FA  EF81  F004         	goto	i2u13_41
  1572  0008FE  EF83  F004         	goto	i2u13_40
  1573  000902                     i2u13_41:
  1574  000902  EF90  F004         	goto	i2l42
  1575  000906                     i2u13_40:
  1576  000906                     
  1577                           ;mcc_generated_files/tmr0.c: 149:     {;mcc_generated_files/tmr0.c: 150:         TMR0_In
      +                          terruptHandler();
  1578  000906  D802               	call	i2u14_48
  1579  000908  EF90  F004         	goto	i2u14_49
  1580  00090C                     i2u14_48:
  1581  00090C  0005               	push	
  1582  00090E  6EFA               	movwf	pclath,c
  1583  000910  503A               	movf	_TMR0_InterruptHandler^0,w,c
  1584  000912  6EFD               	movwf	tosl,c
  1585  000914  503B               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  1586  000916  6EFE               	movwf	tosh,c
  1587  000918  50F8               	movf	tblptru,w,c
  1588  00091A  6EFF               	movwf	tosu,c
  1589  00091C  50FA               	movf	pclath,w,c
  1590  00091E  0012               	return		;indir
  1591  000920                     i2u14_49:
  1592  000920                     i2l42:
  1593  000920  0012               	return		;funcret
  1594  000922                     __end_of_TMR0_ISR:
  1595                           	opt callstack 0
  1596                           
  1597 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  1598 ;; Defined at:
  1599 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;		None
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1613 ;;      Params:         0       0       0       0       0       0       0
  1614 ;;      Locals:         0       0       0       0       0       0       0
  1615 ;;      Temps:          1       0       0       0       0       0       0
  1616 ;;      Totals:         1       0       0       0       0       0       0
  1617 ;;Total ram usage:        1 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_TMR0_Initialize
  1623 ;;		_TMR0_ISR
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text15
  1628  00074C                     __ptext15:
  1629                           	opt callstack 0
  1630  00074C                     _TMR0_DefaultInterruptHandler:
  1631                           	opt callstack 24
  1632  00074C                     
  1633                           ;mcc_generated_files/tmr0.c: 164:     static int8_t cnt = 0;;mcc_generated_files/tmr0.c:
      +                           166:     if(cnt > 5)
  1634  00074C  503C               	movf	TMR0_DefaultInterruptHandler@cnt^0,w,c
  1635  00074E  0A80               	xorlw	128
  1636  000750  0F7A               	addlw	-134
  1637  000752  A0D8               	btfss	status,0,c
  1638  000754  EFAE  F003         	goto	i2u9_41
  1639  000758  EFB0  F003         	goto	i2u9_40
  1640  00075C                     i2u9_41:
  1641  00075C  EFD7  F003         	goto	i2l1016
  1642  000760                     i2u9_40:
  1643  000760  B889               	btfsc	137,4,c	;volatile
  1644  000762  EFB5  F003         	goto	i2u10_41
  1645  000766  EFB8  F003         	goto	i2u10_40
  1646  00076A                     i2u10_41:
  1647  00076A  0E01               	movlw	1
  1648  00076C  EFB9  F003         	goto	i2u10_46
  1649  000770                     i2u10_40:
  1650  000770  0E00               	movlw	0
  1651  000772                     i2u10_46:
  1652  000772  0AFF               	xorlw	255
  1653  000774  6E01               	movwf	??_TMR0_DefaultInterruptHandler^0,c
  1654  000776  3A01               	swapf	??_TMR0_DefaultInterruptHandler^0,f,c
  1655  000778  5089               	movf	137,w,c	;volatile
  1656  00077A  1801               	xorwf	??_TMR0_DefaultInterruptHandler^0,w,c
  1657  00077C  0BEF               	andlw	-17
  1658  00077E  1801               	xorwf	??_TMR0_DefaultInterruptHandler^0,w,c
  1659  000780  6E89               	movwf	137,c	;volatile
  1660  000782  BA89               	btfsc	137,5,c	;volatile
  1661  000784  EFC6  F003         	goto	i2u11_41
  1662  000788  EFC9  F003         	goto	i2u11_40
  1663  00078C                     i2u11_41:
  1664  00078C  0E01               	movlw	1
  1665  00078E  EFCA  F003         	goto	i2u11_46
  1666  000792                     i2u11_40:
  1667  000792  0E00               	movlw	0
  1668  000794                     i2u11_46:
  1669  000794  0AFF               	xorlw	255
  1670  000796  6E01               	movwf	??_TMR0_DefaultInterruptHandler^0,c
  1671  000798  3A01               	swapf	??_TMR0_DefaultInterruptHandler^0,f,c
  1672  00079A  4601               	rlncf	??_TMR0_DefaultInterruptHandler^0,f,c
  1673  00079C  5089               	movf	137,w,c	;volatile
  1674  00079E  1801               	xorwf	??_TMR0_DefaultInterruptHandler^0,w,c
  1675  0007A0  0BDF               	andlw	-33
  1676  0007A2  1801               	xorwf	??_TMR0_DefaultInterruptHandler^0,w,c
  1677  0007A4  6E89               	movwf	137,c	;volatile
  1678  0007A6                     
  1679                           ;mcc_generated_files/tmr0.c: 170:         cnt = 0;
  1680  0007A6  0E00               	movlw	0
  1681  0007A8  6E3C               	movwf	TMR0_DefaultInterruptHandler@cnt^0,c
  1682                           
  1683                           ;mcc_generated_files/tmr0.c: 171:     }
  1684  0007AA  EFD8  F003         	goto	i2l56
  1685  0007AE                     i2l1016:
  1686                           
  1687                           ;mcc_generated_files/tmr0.c: 173:     {;mcc_generated_files/tmr0.c: 174:         cnt++;
  1688  0007AE  2A3C               	incf	TMR0_DefaultInterruptHandler@cnt^0,f,c
  1689  0007B0                     i2l56:
  1690  0007B0  0012               	return		;funcret
  1691  0007B2                     __end_of_TMR0_DefaultInterruptHandler:
  1692                           	opt callstack 0
  1693  0000                     
  1694                           	psect	text16
  1695  000000                     __ptext16:
  1696                           	opt callstack 0
  1697  000000                     
  1698                           	psect	rparam
  1699  0000                     
  1700                           	psect	temp
  1701  00003D                     btemp:
  1702                           	opt callstack 0
  1703  00003D                     	ds	1
  1704  0000                     int$flags	set	btemp
  1705  0000                     wtemp8	set	btemp+1
  1706  0000                     ttemp5	set	btemp+1
  1707  0000                     ttemp6	set	btemp+4
  1708  0000                     ttemp7	set	btemp+8
  1709                           tosu	equ	0xFFF
  1710                           tosh	equ	0xFFE
  1711                           tosl	equ	0xFFD
  1712                           stkptr	equ	0xFFC
  1713                           pclatu	equ	0xFFB
  1714                           pclath	equ	0xFFA
  1715                           pcl	equ	0xFF9
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           prodh	equ	0xFF4
  1721                           prodl	equ	0xFF3
  1722                           indf0	equ	0xFEF
  1723                           postinc0	equ	0xFEE
  1724                           postdec0	equ	0xFED
  1725                           preinc0	equ	0xFEC
  1726                           plusw0	equ	0xFEB
  1727                           fsr0h	equ	0xFEA
  1728                           fsr0l	equ	0xFE9
  1729                           wreg	equ	0xFE8
  1730                           indf1	equ	0xFE7
  1731                           postinc1	equ	0xFE6
  1732                           postdec1	equ	0xFE5
  1733                           preinc1	equ	0xFE4
  1734                           plusw1	equ	0xFE3
  1735                           fsr1h	equ	0xFE2
  1736                           fsr1l	equ	0xFE1
  1737                           bsr	equ	0xFE0
  1738                           indf2	equ	0xFDF
  1739                           postinc2	equ	0xFDE
  1740                           postdec2	equ	0xFDD
  1741                           preinc2	equ	0xFDC
  1742                           plusw2	equ	0xFDB
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         65
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      60
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(2) Largest target is 64
		 -> Buf(BANK0[64]), 

    FLASH_WriteByte@flashRdBufPtr	PTR unsigned char  size(2) Largest target is 64
		 -> Buf(BANK0[64]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _Signal_BL_Requested->_FLASH_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EraseResetVector->_FLASH_WriteByte
    _FLASH_WriteByte->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0_DefaultInterruptHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4622
                   _EraseResetVector
                  _SYSTEM_Initialize
                _Signal_BL_Requested
 ---------------------------------------------------------------------------------
 (1) _Signal_BL_Requested                                  0     0      0    2262
                    _FLASH_WriteByte
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              5 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EraseResetVector                                     0     0      0    2262
                    _FLASH_WriteByte
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteByte                                     17    10      7    2262
                                             28 COMRAM    17    10      7
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    20    14      6     766
                                              8 COMRAM    20    14      6
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     5     1      4     165
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _FLASH_ReadByte                                       4     0      4     294
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           2     2      0       0
                                              1 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EraseResetVector
     _FLASH_WriteByte
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _Signal_BL_Requested
     _FLASH_WriteByte
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      40       4       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2D      3C       1       63.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7C       9        0.0%
DATA                 0      0      7C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Apr 21 11:32:47 2020

                                      l23 0956                                        l45 09D0  
                                      l65 09D4                                        l92 09BC  
                                      l89 099C                           _timer0ReloadVal 0038  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l131 0872  
                                     l240 0834                                       l163 09AE  
                                     l171 074A                                       l227 08D2  
                                     l180 066C                                       l237 07F2  
                                     l229 08E0                                       l175 06B2  
                                     l185 098A                                       l179 0680  
                            __CFG_CPB$OFF 000000                                       u220 0592  
                                     u300 08C6                                       u221 058E  
                                     u301 08C2                                       u310 08E0  
                                     u215 0988                                       u311 08DC  
                                     u216 098A                                       u240 05FA  
                                     u250 0666                                       u251 0662  
                                     u235 05BE                                       u260 0680  
                                     u261 067C                                       u245 05F0  
                                     u280 06B2                                       u281 06AE  
                                     u290 071E                              __CFG_CPD$OFF 000000  
                                     u275 069C                                       u291 071A  
                                     u276 069E                                       _Buf 0060  
                        ?_FLASH_WriteByte 001D                                       tosl 000FFD  
                                     wreg 000FE8                                      l1020 0836  
                                    l1030 0870                                      l1022 0852  
                                    l1200 0596                                      l1032 09B0  
                                    l1024 0854                                      l1202 059A  
                                    l1018 09D2                                      l1026 0856  
                                    l1220 066E                                      l1204 05AE  
                                    l1028 0858                                      l1230 0694  
                                    l1222 0670                                      l1214 0638  
                                    l1206 05B6                                      l1160 0964  
                                    l1232 069E                                      l1224 0688  
                                    l1216 0654                                      l1208 0634  
                                    l1240 092C                                      l1170 0972  
                                    l1162 0968                                      l1226 0690  
                                    l1218 0666                                      l1234 06A0  
                                    l1250 06B4                                      l1242 0942  
                                    l1180 0980                                      l1172 0974  
                                    l1164 096C                                      l1156 0958  
                                    l1228 0692                                      l1260 070C  
                                    l1252 06DE                                      l1244 0944  
                                    l1236 0922                                      l1174 0976  
                                    l1166 096E                                      l1158 0960  
                                    l1190 0542                                      l1262 070E  
                                    l1182 09C8                                      l1246 0946  
                                    l1238 0924                                      l1270 0990  
                                    l1184 099E                                      l1176 097A  
                                    l1168 0970                                      l1192 0566  
                                    l1264 071E                                      l1248 0952  
                                    l1272 0994                                      l1186 09AC  
                                    l1178 097E                                      l1194 056E  
                                    l1266 072E                                      l1258 06E2  
                                    l1274 0998                                      l1290 08B6  
                                    l1196 056E                                      l1268 098C  
                                    l1276 07B2                                      l1292 08B8  
                                    l1278 07F4                                      l1294 08C6  
                                    l1286 08B0                                      l1296 08CA  
                                    l1288 08B4                                      _LATA 000F89  
                                    _LATB 000F8A                                      _LATC 000F8B  
                                    _LATD 000F8C                                      _LATE 000F8D  
                                    i2l42 0920                                      i2l53 0782  
                                    i2l56 07B0                                      i2l72 0532  
                                    _WPUB 000F61                                      _main 08B0  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 003D  
                           __CFG_BORV$190 000000                         ?_FLASH_WriteBlock 0009  
                                    start 053E                             __CFG_IESO$OFF 000000  
                      ??_FLASH_WriteBlock 000F                              ___param_bank 000000  
                 __end_of_TMR0_Initialize 0958            ??_TMR0_DefaultInterruptHandler 0001  
          __size_of_OSCILLATOR_Initialize 000E             __end_of_OSCILLATOR_Initialize 09BE  
                                   ?_main 0001                                     _EEADR 000FA9  
                                   _T0CON 000FD5                            __CFG_DEBUG$OFF 000000  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0004  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 0922                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                        __CFG_MCLRE$EXTMCLR 000000  
                                   pclath 000FFA                                     tablat 000FF5  
                                   ttemp5 003E                                     ttemp6 0041  
                                   ttemp7 0045                                     status 000FD8  
                                   wtemp8 003E                            __CFG_HFOFST$ON 000000  
                          __CFG_PBADEN$ON 000000                           __initialization 0874  
                            __end_of_main 08EA                   FLASH_ReadByte@flashAddr 0004  
                     FLASH_WriteByte@byte 0023               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 002E                             __activetblptr 000002  
                 __size_of_FLASH_ReadByte 0012                       _Signal_BL_Requested 07B2  
               FLASH_WriteBlock@writeAddr 0009                                    _EEDATA 000FA8  
                                  _EECON2 000FA7                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  _ANSELD 000F3B                                    _ANSELE 000F3C  
                                  i2l1010 074C                                    i2l1012 0760  
                                  i2l1014 07A6                                    i2l1016 07AE  
                                  i2l1060 0906                                    i2l1052 08EA  
                                  i2l1054 08EC                                    i2l1056 08F0  
                                  i2l1058 08F4                                    i2l1092 0512  
                                  i2l1094 0520                                    i2l1096 052E  
                          __CFG_WDTEN$OFF 000000                                    _TABLAT 000FF5  
               __size_of_FLASH_EraseBlock 0034                                    _OSCCON 000FD3  
                       ?_EraseResetVector 0001                                    i2u9_40 0760  
                                  i2u9_41 075C                        ??_EraseResetVector 002E  
                    ?_Signal_BL_Requested 0001                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                          ?_TMR0_Initialize 0001  
                                  clear_0 089A                              __pdataCOMRAM 002E  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 0004  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 098C  
                              __accesstop 0060                   __end_of__initialization 08A2  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                   ??_Signal_BL_Requested 002E                          FLASH_WriteByte@i 002D  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0008  
                               ?_TMR0_ISR 0001               FLASH_WriteBlock@GIEBitValue 0017  
               __end_of_SYSTEM_Initialize 099E                                __pbssBANK0 0060  
                         __CFG_PLLCFG$OFF 000000                                __pnvCOMRAM 0038  
                      __CFG_CCP2MX$PORTC1 000000          __end_of_TMR0_SetInterruptHandler 09D2  
                              ??_TMR0_ISR 0002                        __CFG_CCP3MX$PORTB5 000000  
               __size_of_FLASH_WriteBlock 0172                                _flashAddr2 002E  
                          _FLASH_ReadByte 099E                                   _OSCCON2 000FD2  
                                 _TBLPTRH 000FF7                                   _TBLPTRL 000FF6  
                                 i2u10_40 0770                                   i2u10_41 076A  
                                 _TBLPTRU 000FF8                                   i2u10_46 0772  
                                 i2u11_40 0792                                   i2u11_41 078C  
                                 i2u11_46 0794                                   i2u13_40 0906  
                                 i2u13_41 0902                                   i2u14_48 090C  
                                 i2u15_40 0520                                   i2u14_49 0920  
                                 i2u15_41 051C                                   i2u16_40 052E  
                                 i2u16_41 052A                                   _OSCTUNE 000F9B  
                        _FLASH_EraseBlock 0958                  __size_of_FLASH_WriteByte 0098  
                         __CFG_PWRTEN$OFF 000000                                   __Hparam 0000  
                                 __Lparam 0000              FLASH_WriteByte@flashRdBufPtr 0021  
                  __end_of_FLASH_ReadByte 09B0                                   __pcinit 0874  
                                 __ramtop 0600                                   __ptext0 08B0  
                                 __ptext1 07B2                                   __ptext2 098C  
                                 __ptext3 0922                                   __ptext4 09C8  
                                 __ptext5 0836                                   __ptext6 09B0  
                                 __ptext7 09D2                                   __ptext8 07F4  
                                 __ptext9 06B4                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 09B0                  ??_PIN_MANAGER_Initialize 0004  
              __size_of_SYSTEM_Initialize 0012                      end_of_initialization 08A2  
                           __Lmediumconst 0000                                   postdec1 000FE5  
                                 postinc0 000FEE                           ?_FLASH_ReadByte 0004  
               __size_of_EraseResetVector 0042                  _TMR0_SetInterruptHandler 09C8  
                               _PORTCbits 000F82             FLASH_WriteBlock@flashWrBufPtr 000D  
                FLASH_EraseBlock@baseAddr 0004                         FLASH_WriteBlock@i 001C  
                       FLASH_WriteBlock@j 0019                         ??_FLASH_WriteByte 0024  
                              _writeData2 0036              __end_of_INTERRUPT_Initialize 09D6  
                           __pidataCOMRAM 09BE                         __size_of_TMR0_ISR 0038  
                        _FLASH_WriteBlock 0542                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 0874                  __size_of_TMR0_Initialize 0036  
         __size_of_PIN_MANAGER_Initialize 003E            FLASH_WriteBlock@WriteBlkOffset 001A  
           FLASH_WriteByte@blockStartAddr 0029               __end_of_Signal_BL_Requested 07F4  
                   FLASH_WriteByte@offset 0028           TMR0_DefaultInterruptHandler@cnt 003C  
             FLASH_EraseBlock@GIEBitValue 0008                  __end_of_FLASH_EraseBlock 098C  
                             __pbssCOMRAM 003C                  FLASH_WriteByte@flashAddr 001D  
                   _TMR0_InterruptHandler 003A                    _PIN_MANAGER_Initialize 0836  
                               __pintcode 0508                                 _flashAddr 0032  
                        _EraseResetVector 07F4              ??_INTERRUPT_InterruptManager 0002  
                        __CFG_PRICLKEN$ON 000000                      _INTERRUPT_Initialize 09D2  
          FLASH_WriteBlock@blockStartAddr 0013                         ??_TMR0_Initialize 0006  
                                _LATAbits 000F89       __size_of_INTERRUPT_InterruptManager 0036  
              ??_TMR0_SetInterruptHandler 0006                          ??_FLASH_ReadByte 0008  
                                _PIR2bits 000FA1                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR0_ISR 08EA  
                               _writeData 0037                               _INTCON2bits 000FF1  
                               copy_data0 0888                     ?_INTERRUPT_Initialize 0001  
                         _FLASH_WriteByte 06B4                  __end_of_FLASH_WriteBlock 06B4  
                              _EECON1bits 000FA6                                  __Hrparam 0000  
                                __Lrparam 0000                        __CFG_BOREN$SBORDIS 000000  
                       __CFG_P2BMX$PORTD2 000000                   ??_OSCILLATOR_Initialize 0004  
                                __ptext10 0542                                  __ptext11 0958  
                                __ptext12 099E                                  __ptext14 08EA  
                                __ptext15 074C                                  __ptext16 0000  
                           __size_of_main 003A      __end_of_TMR0_DefaultInterruptHandler 07B2  
   __size_of_TMR0_DefaultInterruptHandler 0066              _TMR0_DefaultInterruptHandler 074C  
                                int$flags 003D        __end_of_INTERRUPT_InterruptManager 053E  
              _INTERRUPT_InterruptManager 0508                         ?_FLASH_EraseBlock 0004  
     FLASH_WriteBlock@numberOfWriteBlocks 0018                        ??_FLASH_EraseBlock 0008  
                 __end_of_FLASH_WriteByte 074C                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0004                                  intlevel2 0000  
                __end_of_EraseResetVector 0836                   ?_PIN_MANAGER_Initialize 0001  
            __size_of_Signal_BL_Requested 0042           fp__TMR0_DefaultInterruptHandler 0000  
           ?_TMR0_DefaultInterruptHandler 0001                           _TMR0_Initialize 0922  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 0874  
                       __CFG_FOSC$INTIO67 000000  
